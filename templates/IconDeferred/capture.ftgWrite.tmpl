#set $var = $ftgWrite_var
#if $var.dim > 4 or $var.type.upper().startswith('CHARACTER'):
  ! *** WARNING: Type not supported by serialbox *** 
  !     $var 
  !     $var.type, DIMENSION($var.dim)
#else
  #if $var.referencable
    #set $closeStatements = []
    #set $aliasVar = $var
    #for $level in $var.levels
      #set $container = $aliasVar.container($level - ($var.level - $aliasVar.level))
      #if $container.polymorph
        #set $alias = 'polym' + str($level)
        SELECT TYPE ($alias => $container)
        TYPE IS ($container.dynamicType)
        #silent $closeStatements.append('END SELECT')
        #set $aliasVar = $var.alias($alias, $level) 
      #else
        #set $aa = $allocatedOrAssociated($container, $level)
        #if $aa
          IF ($aa) THEN
          #silent $closeStatements.append('END IF')
        #else
          #silent $closeStatements.append($clearLine)
        #end if
      #end if
      #if $level < $var.level and $needsRegistration($container)
        #set $contType = $container.type
        #if $container.containsArray
          CALL ftg_register_only("$container", "$contType", LBOUND($container), UBOUND($container))
        #else
          CALL ftg_register_only("$container", "$contType")
        #end if
        #silent $setRegistered($container) 
      #end if
    #end for
    #if $var.containsArray
      CALL ftg_write("$var", $aliasVar, LBOUND($aliasVar), UBOUND($aliasVar))
    #else
      CALL ftg_write("$var", $aliasVar)
    #end if  
    #for $close in reversed($closeStatements)
      $close
    #end for
  #else
  
    #set $closeStatements = []
    #set $mandDim = $var.mandatoryDimensions
    #set $d = 0
    #set $ad = 0
    #set $aliasVar = $var
    #set $filledVar = $fillIndices($var, $mandDim, "ftg_d1", "ftg_d2", "ftg_d3", "ftg_d4")
    #set $filledAlias = $filledVar
    #for $level in $var.levels
      #set $container = $aliasVar.container($level - ($var.level - $aliasVar.level))
      #set $filledContainer = $fillIndices($container, $ad, *("ftg_d1", "ftg_d2", "ftg_d3", "ftg_d4")[$d - $ad:])
      #if $container.polymorph
        #set $alias = 'polym' + str($level)
        SELECT TYPE ($alias => $filledContainer)
        TYPE IS ($container.dynamicType)
        #silent $closeStatements.append('END SELECT')
        #set $aliasVar = $var.alias($alias, $level) 
        #set $filledAlias = $filledVar.alias($alias, $level) 
        #set $ad = 0
      #else
        #set $aa = $allocatedOrAssociated($filledContainer, $level)
        #if $aa
          IF ($aa) THEN
          #silent $closeStatements.append('END IF')
        #else
          #silent $closeStatements.append($clearLine)
        #end if
      #end if
      #if $level < $var.level and $needsRegistration($filledContainer)
        #set $contType = $container.type
        #if $d < $container.totalDim
          CALL ftg_register_only("$filledContainer", "$contType", LBOUND($filledContainer), UBOUND($filledContainer))
        #else
          CALL ftg_register_only("$filledContainer", "$contType")
        #end if
        #silent $setRegistered($filledContainer) 
      #end if
      #if $d < $mandDim
        #set $loopDims = range($d + 1, $d + $container.dim + 1) 
        #set $d += $container.dim
        #set $ad += $container.dim
        #set $cd = 0
        #for $ld in $loopDims
          #set $cd += 1
          DO ftg_d$d = LBOUND($filledContainer, $cd), UBOUND($filledContainer, $cd)
          #silent $closeStatements.append('END DO')
        #end for        
      #end if      
    #end for
    #if $mandDim < $var.totalDim
      CALL ftg_write("$filledVar", $filledAlias, LBOUND($filledAlias), UBOUND($filledAlias))
    #else
      CALL ftg_write("$filledVar", $filledAlias)
    #end if  
    #for $close in reversed($closeStatements)
      $close
    #end for
  #end if  
#end if
$clearLine